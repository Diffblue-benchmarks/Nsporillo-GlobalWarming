buildCmd: mvn -e -X -Dmaven.test.skip=true compile
testCmd: true
lineLength: 4096
skipVerification: true
cbmcArguments:
  # Do not generate coverage comments on generated tests.
  java-generate-no-comments: true
  # Constrain the size of arrays created in the analyzed code.
  java-max-vla-length: 100000
phases:
  -
    #Phase 0 PRETTY, SIMPLE and SMART - pretty tests, do not yest private methods directly, Smart-Harness
    timeout: 180
    cbmcArguments:
      # Use simple models first containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # Instatiate classes using the simplest contructor stratergy 
      smart-harness: simplest-constructor-and-nondet
  -
    #Phase 1 PRETTY AND COMPLEX - standard models only, pretty tests, do not test private methods directly, input factory
    timeout: 180
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 2
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
      # Limit input factory recursive depth (default 0 = no recursion allowed)
      java-test-input-factory-bmc-recursion-limit: 4
  -
    #Phase 2 FIFO Strategy - pretty tests, do not test private methods directly, fifo
    timeout: 100
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Add constraint that strings are printable
      max-nondet-string-length: 100
      # Explores the program tree breadth-first.
      paths: fifo
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: false
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
  -
    #Phase 3 - exceptions, do not test private methods directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers first (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
      unwind: 3
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
  -
    #Phase 4 - test private methods directly, increase reflection
    timeout: 180
    cbmcArguments:
      # Use simple models containers first (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # If the logs contain output of the following then proceed to phase X
    nextPhase:
      # If the function is not analysable then do not pass onto the next phase
      not_analyzed: null
  -
    #PHASE 5 - aggressive mocking, do not test private methods directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers first (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 3000
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Only load the class (and related inner/outer classes) containing the method under test,
      load-containing-class-only: true
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 100
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
      unwind: 3
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
units:
 - target:
   - dir: target/classes
     file: net/porillo/commands/GeneralCommands.class
     sourceDir: src/main/java
     sourceFile: net/porillo/commands/GeneralCommands.java
   - dir: target/classes
     file: net/porillo/config/Lang$LangConfig.class
     sourceDir: src/main/java
     sourceFile: net/porillo/config/Lang.java
   - dir: target/classes
     file: net/porillo/database/TableManager.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/TableManager.java
   - dir: target/classes
     file: net/porillo/util/ChatTable.class
     sourceDir: src/main/java
     sourceFile: net/porillo/util/ChatTable.java
   - dir: target/classes
     file: net/porillo/database/tables/WorldTable.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/tables/WorldTable.java
   - dir: target/classes
     file: net/porillo/database/api/InsertQuery.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/api/InsertQuery.java
   - dir: target/classes
     file: net/porillo/database/queries/insert/WorldInsertQuery.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/queries/insert/WorldInsertQuery.java
   - dir: target/classes
     file: net/porillo/engine/ClimateEngine.class
     sourceDir: src/main/java
     sourceFile: net/porillo/engine/ClimateEngine.java
   - dir: target/classes
     file: net/porillo/objects/GWorld.class
     sourceDir: src/main/java
     sourceFile: net/porillo/objects/GWorld.java
   - dir: target/classes
     file: net/porillo/database/tables/PlayerTable.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/tables/PlayerTable.java
   - dir: target/classes
     file: net/porillo/engine/api/WorldClimateEngine.class
     sourceDir: src/main/java
     sourceFile: net/porillo/engine/api/WorldClimateEngine.java
   - dir: target/classes
     file: net/porillo/engine/models/CarbonIndexModel.class
     sourceDir: src/main/java
     sourceFile: net/porillo/engine/models/CarbonIndexModel.java
   - dir: target/classes
     file: net/porillo/objects/GPlayer.class
     sourceDir: src/main/java
     sourceFile: net/porillo/objects/GPlayer.java
   - dir: target/classes
     file: net/porillo/database/queue/ConcurrentHashQueue.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/queue/ConcurrentHashQueue.java
   - dir: target/classes
     file: net/porillo/database/queue/AsyncDBQueue.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/queue/AsyncDBQueue.java
   - dir: target/classes
     file: net/porillo/config/WorldConfig.class
     sourceDir: src/main/java
     sourceFile: net/porillo/config/WorldConfig.java
   - dir: target/classes
     file: net/porillo/database/queue/AsyncDBQueue$1.class
     sourceDir: src/main/java
     sourceFile: net/porillo/database/queue/AsyncDBQueue.java
   - dir: target/classes
     file: net/porillo/util/ChatTable$Section.class
     sourceDir: src/main/java
     sourceFile: net/porillo/util/ChatTable.java
   - dir: target/classes
     file: net/porillo/config/Lang.class
     sourceDir: src/main/java
     sourceFile: net/porillo/config/Lang.java
   - dir: target/classes
     file: net/porillo/engine/models/ScoreTempModel.class
     sourceDir: src/main/java
     sourceFile: net/porillo/engine/models/ScoreTempModel.java
   - dir: target/classes
     file: net/porillo/config/GlobalWarmingConfig.class
     sourceDir: src/main/java
     sourceFile: net/porillo/config/GlobalWarmingConfig.java
   - dir: target/classes
     file: net/porillo/GlobalWarming.class
     sourceDir: src/main/java
     sourceFile: net/porillo/GlobalWarming.java
